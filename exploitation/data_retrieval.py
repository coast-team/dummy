from os import listdir
from os.path import isfile, isdir
import sys
import re
import json
import threading

result_data = []


def get_list_files(path_to_dir):
    regexp = re.compile(r'^records-*.')
    list_files = [f for f in listdir(path_to_dir) if isfile(''.join(
        (path_to_dir, f)))]
    return [''.join((path_to_dir, f))
            for f in list_files if re.search(regexp, f) is not None]


def read_file(path):
    global result_data
    collab_record = {}

    with open(path, 'r') as records_file:
        content = records_file.read()
    print(content)
    content_json = json.loads(content)
    traces = content_json['traces']

    for trace in traces:
        if len(trace) >= 2:
            records = {}
            for line in trace[1:-1]:
                split_line = line.split(' ')
                word = split_line[2]
                if word not in records:
                    records[word] = []
                records[word].append((int(split_line[0]), split_line[1]))
            if trace[0] == 'READER':
                collab_record['reader_record'] = records
                collab_record['reader_hash'] = trace[-1]
            elif trace[0] == 'WRITER':
                collab_record['writer_record'] = records
                collab_record['writer_hash'] = trace[-1]
            else:
                print('skip')
    print(collab_record)
    collab_record['collab_address'] = path[len('records-'):]
    result_data.append(collab_record)


def retrieve_data(path_to_dir):
    list_files = get_list_files(path_to_dir)
    threads = []
    for path in list_files:
        thread = threading.Thread(target=read_file, args=(path,))
        thread.start()
        threads.append(thread)

    for thread in threads:
        thread.join()


if __name__ == '__main__':
    if len(sys.argv) < 2:
        sys.exit("[Usage] %s path_to_dir" % sys.argv[0])

    path_to_dir = sys.argv[1]
    if not isdir(path_to_dir):
        print('The path to sources dir given is not correct')
        sys.exit(1)
    retrieve_data(path_to_dir)
